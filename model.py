# -*- coding: utf-8 -*-
"""DATA TEST BARU.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KtI0yAlkj3cl4JhJzvFqutcU4d6_k7Os
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
import joblib

Penjualan = 'penjualan_mobil.csv'  # Replace with the URL or path to your CSV file
data = pd.read_csv(Penjualan)

# Convert the 'Bulan' column to datetime
data['Bulan'] = pd.to_datetime(data['Bulan'], format='%Y-%m')

# Extract year and month into separate columns
data['Tahun'] = data['Bulan'].dt.year
data['Bulan'] = data['Bulan'].dt.month

# Now 'data' has separate columns for 'Bulan' and 'Tahun'
print(data.head())

# Use 'Tahun' for prediction instead of 'Bulan'
X = data[['Tahun']]
y = data['Penjualan']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

k = 5
knn = KNeighborsRegressor(n_neighbors=k)
knn.fit(X_train, y_train)

y_pred_train = knn.predict(X_train)
y_pred_test = knn.predict(X_test)

print(f'RMSE Pelatihan: {mean_squared_error(y_train, y_pred_train, squared=False)}')
print(f'RMSE Pengujian: {mean_squared_error(y_test, y_pred_test, squared=False)}')
print(f'Skor R2 Pelatihan: {r2_score(y_train, y_pred_train)}')
print(f'Skor R2 Pengujian: {r2_score(y_test, y_pred_test)}')

# joblib.dump(knn, 'model_knn.pkl')
# joblib.dump(scaler, 'scaler.pkl')

tahun_baru = 2025  # For example, the year 2025
# Assuming 'tahun_baru' is the year you want to predict sales for
# tahun_baru_df = pd.DataFrame([[tahun_baru]], columns=['Tahun'])  # Create a DataFrame with the same column name as during training
# tahun_baru_scaled = scaler.transform(tahun_baru_df)  # Scale the new data

# prediksi_penjualan = knn.predict(tahun_baru_scaled)  # Make the prediction
# print(f'Prediksi untuk tahun {tahun_baru}: {prediksi_penjualan[0]}')
# from flask import Flask, request, jsonify
import joblib

joblib.dump(knn, "model.joblib")
joblib.dump(scaler, "scaler.joblib")

# app = Flask(__name__)

# # Load the trained model and scaler
# model = joblib.load('model_knn.pkl')  # Replace 'model_knn.pkl' with your model file name
# scaler = joblib.load('scaler.pkl')    # Replace 'scaler.pkl' with your scaler file name

# @app.route('/')
# def home():
#     return 'API Model Prediksi Penjualan Mobil'

# @app.route('/predict', methods=['POST'])
# def predict():
#     try:
#         # Get input data from POST JSON request
#         json_data = request.get_json()
#         tahun = json_data['tahun']

#         # Normalize input data
#         tahun_scaled = scaler.transform([[tahun]])

#         # Make prediction using the model
#         prediksi = model.predict(tahun_scaled)

#         # Prepare the prediction result to be sent as a JSON response
#         response = {'tahun': tahun, 'prediksi_penjualan': float(prediksi[0])}
#         return jsonify(response)

#     except Exception as e:
#         return jsonify({'error': str(e)})

# if __name__ == '__main__':
#     app.run(debug=True)
